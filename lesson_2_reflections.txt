Q) What happens when you initialize a repository? Why do you need to do it?
Answer) You initialize to setup a new respository. You need to do it for GIT to start tracking your files.

Q) How is the staging area different from the working directory and the repository? What value do you think it offers?

Answer) Repositories contain meta data about histoy og the git repositories since it was created.
Staging area: Intermediate area which contains files that are added into git but not yet committed to repository. Once we are ready to commit, it adds ALL the files in the staging area as a single commit and adds them to a repository.

Working Directory: contains files that may be added to respository

Q) How can you use the staging area to make sure you have one commit per logical change?
Answer) only add those files that you want commited to staging area

Q) What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Answer) Branches are perfect to try different things with the original code, like create experimental features etc. They can eventually be merged or can grow separately

Q) How do the diagrams help you visualize the branch structure?
Answer) Helps visualize what is going on within the code changes

Q) What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Answer) The code from both merges to form one single program. Diagrams are visual representation of tracking what was merged and what was discarded.

Q) What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Answer) Branching and Merging will always be tricky. The best thing to do is set up rules in advance before branching and then subsequent merging. Also write detailed comments for each module so that conflicts will be easier to resolve manually later
